@mixin font($font_name, $file_name, $weight, $style) {
  @font-face {
    font-family: $font_name;
    font-display: swap;
    src: url("../fonts/#{$file_name}.woff") format("woff"), url("../fonts/#{$file_name}.woff2") format("woff2");
    font-weight: #{$weight};
    font-style: #{$style};
  }
}
@mixin anim($time, $delay) {
  transition: all $time ease $delay;
  -webkit-transition: all $time ease $delay;
  -moz-transition: all $time ease $delay;
  -o-transition: all $time ease $delay;
}
@mixin anim_cubic($time, $delay) {
  -webkit-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
  -moz-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
  -ms-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
  -o-transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
  transition: all $time cubic-bezier(0.68, -0.55, 0.265, 1.55) $delay;
}
@mixin rotate($deg) {
  -webkit-transform: rotate($deg);
  -moz-transform: rotate($deg);
  -ms-transform: rotate($deg);
  -o-transform: rotate($deg);
  transform: rotate($deg);
}
@mixin scale($num) {
  -webkit-transform: scale($num);
  -moz-transform: scale($num);
  -ms-transform: scale($num);
  -o-transform: scale($num);
  transform: scale($num);
}
@mixin skew($num) {
  -webkit-transform: skewX($num);
  -moz-transform: skewX($num);
  -ms-transform: skewX($num);
  -o-transform: skewX($num);
  transform: skewX($num);
}
@mixin cnt($h) {
  display: flex;
  flex-direction: column;
  height: $h;
  text-align: center;
  align-items: stretch;
  justify-content: center;
}
@mixin tr($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
  -moz-transform: translate3d($x, $y, $z);
  -o-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  font-size: 0;
}
@mixin flexboxinline() {
  display: -webkit-inline-fle;
  display: -moz-inline-flex;
  display: -ms-inline-flex;
  display: -o-inline-flex;
  display: inline-flex;
}
@mixin flexorder($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

@mixin lineheight($lh, $fsz) {
  line-height: calc(#{$lh} / #{$fsz} * 100%);
}

@mixin adaptive-value($property, $startSize, $minSize, $type, $side: "all") {
  $addSize: $startSize - $minSize;

  @if $side== "left-right" {
    // #{$property}: 0 $startSize + px;

    @if $type == "max" {
    } @else if $type== "min" {
      //Только если больше контейнера
      @media (min-width: #{$maxWidthContainer + px}) {
        #{$property}: 0 calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
      }
    } @else {
      //Всегда
      #{$property}: 0 calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  }
}

@mixin bg-url($url, $url2x: false, $webp1x: false, $webp2x: false, $avif1x: false, $avif2x: false) {
  background-image: url($url);
  @if $webp1x {
    .webp & {
      background-image: url($webp1x);
    }
  }
  @if $avif1x {
    .avif & {
      background-image: url($avif1x);
    }
  }
  @if $url2x {
    @media screen and (-webkit-min-device-pixel-ratio: 2),
      screen and (min-resolution: 192dpi),
      screen and (min-resolution: 2dppx) {
      background-image: url($url2x);
      @if $webp2x {
        .webp & {
          background-image: url($webp2x);
        }
      }
      @if $avif2x {
        .avif & {
          background-image: url($avif2x);
        }
      }
    }
  }
}



@mixin equilateral-triangle($direction, $size, $color) {
    width: 0;
    height: 0;
    @if $direction == 'up' {
        border-left: em($size) solid transparent;
        border-right: em($size) solid transparent;
        border-bottom: em($size) solid $color;
    }
    @else if $direction == 'down' {
        border-left: em($size) solid transparent;
        border-right: em($size) solid transparent;
        border-top: em($size) solid $color;
    }
    @else if $direction == 'right' {
        border-top: em($size) solid transparent;
        border-bottom: em($size) solid transparent;
        border-left: em($size) solid $color;
    }
    @else if $direction == 'left' {
        border-top: em($size) solid transparent;
        border-bottom: em($size) solid transparent;
        border-right: em($size) solid $color;
    }
}
