{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/spinner.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","urls","comics","styles","path","match","objectFit","extension","homepage","wiki","items","Spinner","width","height","xmlns","style","margin","background","display","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoading","setState","onCharLoaded","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","Component","View","CharList","chars","newItemLoading","charEnded","charId","onRequest","onCharListLoading","onCharListLoaded","newChars","ended","length","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","props","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","prevProps","prevState","skeleton","limitedComicsList","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79d20a56.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","\r\n\r\nclass MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    _apiKey = 'apikey=0c147f3fb1ba1121177fc124b55cf56a';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?&${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        let { name, description, thumbnail, urls, id, comics } = char;\r\n        description = description ? description : 'Description not found.';\r\n        const styles = (thumbnail.path.match('image_not_available')) ? { objectFit: 'fill' } : null;\r\n\r\n        return {\r\n            name,\r\n            description,\r\n            thumbnail: thumbnail.path + '.' + thumbnail.extension,\r\n            homepage: urls[0].url,\r\n            wiki: urls[1].url,\r\n            id,\r\n            styles,\r\n            comics: comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","const Spinner = ({ width, height }) => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ margin: '0 auto', background: 'none', display: 'block' }} width={width ? width : '200px'} height={height ? height : '200px'} viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img src={img} style={{\r\n            display: 'block',\r\n            width: '250px',\r\n            height: '250px',\r\n            objectFit: 'contain',\r\n            margin: '0 auto'\r\n        }} alt='Error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nimport './randomChar.scss';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    onCharLoading = (char) => {\n        this.setState({\n            char,\n            loading: true\n        })\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .then(this.setState({\n                error: false\n            }))\n            .catch(this.onError)\n    }\n\n\n\n    render() {\n        const { char, loading, error } = this.state;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char={char} /> : null\n\n        return (\n            <div className=\"randomchar\" >\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\" onClick={this.updateChar}>try it</div>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, styles } = char;\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} style={styles} alt=\"Random character\" className=\"randomchar__img\" />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import React, { Component, createRef } from 'react';\n\nimport Spinner from '../spinner/spinner';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport PropTypes from 'prop-types';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n    state = {\n        chars: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false,\n        charId: null\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError);\n\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newChars) => {\n        let ended = false;\n        if (newChars.length < 9) ended = true;\n\n        this.setState(({ offset, chars }) => ({\n            chars: [...chars, ...newChars],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended,\n\n        }));\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = { 'objectFit': 'cover' };\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n\n            return (\n                <li\n                    // ${item.id == this.state.charId ? ' char__item_selected' : ''}\n                    className={`char__item`}\n                    ref={this.setRef}\n                    key={item.id}\n                    tabIndex={i + 1}\n                    onClick={\n                        () => {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                            this.setState({\n                                charId: item.id\n                            })\n                        }\n                    }\n                    onKeyPress={\n                        (e) => {\n                            if (e.key == ' ' || e.key == 'Enter') {\n                                this.props.onCharSelected(item.id);\n                                this.focusOnItem(i);\n                                this.setState({\n                                    charId: item.id\n                                })\n                            }\n                        }\n                    }>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n        const { chars, loading, error, offset, newItemLoading, charEnded } = this.state;\n\n        const items = this.renderItems(chars);\n\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">{newItemLoading ? <Spinner width='100%' height=\"18px\" /> : 'load more'}</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func\n}\n\nexport default CharList;\n\n\n\n\n\n\n\n\n\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Skeleton from '../skeleton/Skeleton'\n\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    onCharLoading = (char) => {\n        this.setState({\n            char,\n            loading: true\n        })\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const { charId } = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton />\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char={char} /> : null\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics, styles } = char;\n\n    const limitedComicsList = [];\n\n    for (let i = 0; i < comics.length; i++) {\n        if (i >= 9) break;\n\n        limitedComicsList.push(\n            <li key={i + 1} className=\"char__comics-item\">\n                {comics[i].name}\n            </li>)\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} style={styles} alt={name} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length <= 0 ? 'There is not comics with this character' : null}\n                {\n                    limitedComicsList\n                }\n            </ul>\n        </>\n    )\n}\n\n// CharInfo.defaultProps = {\n//     charId: PropTypes.string\n// }\n// CharInfo.propTypes = {\n//     charId: PropTypes.number\n// }\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/errorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\" >\n                <AppHeader />\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar />\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected} />\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar} />\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n                </main>\n            </div>\n        )\n    }\n}\n\n\nexport default App;\n\n// import React, { Component, createRef } from 'react';\n// import { Container } from 'react-bootstrap';\n// // import './App.css';\n\n// class Form extends Component {\n\n//     // myRef = createRef();\n\n//     // componentDidMount() {\n//     //     this.myRef.current.focus();\n//     // }\n\n//     setInputRef = elem => {\n//         this.myRef = elem;\n//     }\n\n//     focusFirstTI = () => {\n//         if (this.myRef) {\n//             this.myRef.focus();\n//         }\n//     }\n\n//     render() {\n//         return (\n//             <Container>\n//                 <form className=\"w-50 border mt-5 p-3 m-auto\">\n//                     <div className=\"mb-3\">\n//                         <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\n//                         <input\n//                             ref={this.setInputRef}\n//                             type=\"email\"\n//                             className=\"form-control\"\n//                             id=\"exampleFormControlInput1\"\n//                             placeholder=\"name@example.com\" />\n//                     </div>\n//                     <div className=\"mb-3\">\n//                         <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Example textarea</label>\n//                         <textarea onClick={this.focusFirstTI} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n//                     </div>\n//                 </form>\n//             </Container>\n//         )\n//     }\n// }\n\n\n// function App() {\n//     return (\n//         <Form />\n//     );\n// }\n\n// export default App;\n\n\n\n// import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\n// import { Container } from 'react-bootstrap';\n// // import './App.css';\n\n// class Form extends Component {\n\n//     handleClick = () => {\n//         console.log('click');\n//     }\n\n//     render() {\n//         return (\n//             <Container>\n//                 <form onClick={this.handleClick} className=\"w-50 border mt-5 p-3 m-auto\"\n//                     style={{\n//                         'overflow': 'hidden',\n//                         'position': 'relative'\n//                     }}>\n//                     <div className=\"mb-3\">\n//                         <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\n//                         <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\n//                     </div>\n//                     <div className=\"mb-3\">\n//                         <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">Example textarea</label>\n//                         <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n//                     </div>\n//                     <Portal>\n//                         <Msg />\n//                     </Portal>\n//                 </form>\n//             </Container>\n//         )\n//     }\n// }\n\n// const Portal = (props) => {\n//     const node = document.createElement('div');\n//     document.body.appendChild(node);\n\n//     return ReactDOM.createPortal(props.children, node);\n\n// }\n\n\n// const Msg = () => {\n//     return (\n//         <div\n//             style={{\n//                 'width': '500px',\n//                 'height': '150px',\n//                 'backgroundColor': 'red',\n//                 'position': 'absolute',\n//                 'right': '0',\n//                 'bottom': '0'\n//             }}>\n//             Hello\n//         </div>\n//     )\n// }\n\n// function App() {\n//     return (\n//         <Form />\n//     );\n// }\n\n// export default App;\n\n\n","import React, { Children, cloneElement, Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}